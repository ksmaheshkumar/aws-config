SHELL=/bin/sh

# List is at https://groups.google.com/a/khanacademy.org/group/analytics-admin
# NOTE: make sure the google group is set up to have root@khanacademy.org
#       as a member, or this mail will bounce!
MAILTO=analytics-admin+crontab@khanacademy.org

# This is a mini-script to create and return a directory-name under
# kalogs for the current date.  This is used to redirect output of
# cronjobs to a logfile.  As an example:
#    `eval $LOGFILE foo`
# expands to
#    ~/kalogs/foo/foo.2012-12-25.log
# You can also specify other arguments, which are passed to date:
#    `eval $LOGFILE foo --date=yesterday`
# expands to
#    ~/kalogs/foo/foo.2012-12-24.log
# (The redundant foo's are in case the logfiles get moved around,
# perhaps by accident; we can still tell where they came from.)
#
# This implementation uses a trick: the first argument after the
# <<sh -c ''>> is taken as $0, while $@ expands to "$1" "$2" "$3" ...
# but skips $0, which is exactly what we want in this case.
LOGFILE=bash -c 'mkdir -p ~/kalogs/$0; echo ~/kalogs/$0/$0.$(date "$@" +\%Y-\%m-\%d).log'


# Monitor for uncommitted local changes in the analytics repo every
# hour.  Send email if we see any.
1 * * * * test -z "$(cd ~/analytics; git status --porcelain)" || echo 'Warning: uncommitted changes on tha analyics machine!'

# Monitor the free disk space hourly on this machine. Send alerts if too low.
1 * * * * python ~/analytics/src/monitor_disk_space.py analytics 90 > /dev/null 2>&1

# Daily: Auto-archive the old, locally stored entity and log data to S3 
1 3 * * * bash --login -c 'python -u ~/analytics/tools/archive_to_s3.py I_AM_SERIOUS' >> `eval $LOGFILE auto_archive` 2>&1 

# Fetch GAE usage reports every day. Reports are generated at about 1430 PST
# which is 2130 UTC, and we allow for a bit of wiggle room.
00 22 * * * bash --login -c '~/analytics/src/gae_dashboard/fetch_usage.sh' > `eval $LOGFILE gae_dashboard_usage --date=yesterday` 2>&1 || echo "gae_dashboard_usage run failed; see `eval $LOGFILE gae_dashboard_usage --date=yesterday`"

# Fetch GAE admin UI stats every 5 minutes.
*/5 * * * * bash --login -c '~/analytics/src/gae_dashboard/fetch_stats.sh' >> `eval $LOGFILE gae_dashboard_stats` 2>&1
# Once a day, don't write to the datastore but email on failure to
# keep a pulse on this process.
00 23 * * * bash --login -c '~/analytics/src/gae_dashboard/fetch_stats.sh -n' >> `eval $LOGFILE gae_dashboard_stats` 2>&1 || echo "gae_dashboard_stats run failed; see `eval $LOGFILE gae_dashboard_stats`"

# Fetch appengine statistics (memcache, etc) every 10 minutes.
*/10 * * * * bash --login -c 'curl -s "http://www.khanacademy.org/stats/memcache?output=txt"' >> `eval $LOGFILE appengine_stats` 2>&1
