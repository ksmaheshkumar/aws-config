server.modules = (
        "mod_access",
        "mod_alias",
        "mod_cgi",
        "mod_compress",
        "mod_proxy",
        "mod_redirect",
        "mod_rewrite",
)
 
server.document-root        = "/var/www"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.breakagelog          = "/var/log/lighttpd/breakage.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
 
index-file.names            = ( "index.php", "index.html",
                                "index.htm", "default.htm",
                               " index.lighttpd.html" )
 
url.access-deny             = ( "~", ".inc" )
 
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )
 
## Use ipv6 if available
#include_shell "/usr/share/lighttpd/use-ipv6.pl"
 
server.dir-listing          = "disable"
 
compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ( "application/x-javascript", "text/css", "text/html", "text/plain" )
 
include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

# A secret that we use to send up updates directly from AppEngine
# This file (/etc/lighttpd/khan-secret.conf) contains just one line:
# var.secret = "MYSECRET"
include "khan-secret.conf"

$HTTP["host"] == "search-rpc.khanacademy.org" {
    # Deny anyone trying to get directly to the update endpoints (make them
    # instead use the secure update ones).
    url.rewrite-once = (
       "^/solr/update/" => "/deny",
       "^/solr/secure-update/" + secret + "/(.*)" => "/solr/update/$1",
       "^/cgi-bin/aws-proxy$" => "/deny",
       "^/cloudsearch/secure-update/" + secret + "/(.*)" => "/cgi-bin/aws-proxy"
    )

    # We're whitelisting Solr updates and selects, and CloudSearch updates
    # (which is the endpoint aws-proxy points at).
    $HTTP["url"] =~ "^/solr/(update|select)/" {
        proxy.server = ( "" => ( ( "host" => "127.0.0.1", "port" => "9001" ) ) )
    } else $HTTP["url"] =~ "^/cgi-bin/aws-proxy$" {
        # This is a simple CGI script to reverse proxy for us. Unfortunately
        # lighttpd won't do it for us. See
        # http://phabricator.khanacademy.org/T2427 for more info.
        cgi.assign = ( "" => "" )
    } else $HTTP["url"] =~ "" {
        # Deny everything else with a 403 error. We have to do the always True
        # conditional because lighttpd does not support an unconditional else.
        url.access-deny = ( "" )
    }
}
